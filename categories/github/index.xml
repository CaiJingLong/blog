<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on CaiJingLong</title>
    <link>https://kikt.top/categories/github/</link>
    <description>Recent content in Github on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Sep 2020 16:49:35 +0800</lastBuildDate><atom:link href="https://kikt.top/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github action 的开发到发布</title>
      <link>https://kikt.top/posts/github/actions/create/</link>
      <pubDate>Mon, 07 Sep 2020 16:49:35 +0800</pubDate>
      
      <guid>https://kikt.top/posts/github/actions/create/</guid>
      <description>
        
          
            &lt;p&gt;Github action 这东西是好东西, 但我看了一下, 很多朋友都是停留在用的阶段, 其实偶尔也要换换口味, 自己开发一个 action, 而不是仅仅是用&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;github actions 是 github 推出的一个工作流的工具, 目的是为了帮助我们在某些情况下主动触发仓库的动作, 从而完成 单元测试/CI/CD, 甚至包括 release,发布包管理工具等等&lt;/p&gt;
&lt;p&gt;官方关于 actions 有关的一些仓库都在这里: 
&lt;a href=&#34;https://github.com/actions&#34; &gt;https://github.com/actions&lt;/a&gt;
 , 
&lt;a href=&#34;https://docs.github.com/en/actions&#34; &gt;文档在这里&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;github 的主语言是 js, 当然也肯定也支持 ts&lt;/p&gt;
&lt;p&gt;另外如果对于速度需求并不高的朋友, 也可以使用 docker, 但因为 docker 安装的过程会根据镜像大小有一定的耗时, 所以不一定适用于所有朋友&lt;/p&gt;
&lt;p&gt;如果，你对于本文章不是很感兴趣，可以参考
&lt;a href=&#34;https://docs.github.com/en/actions/creating-actions&#34; &gt;创建 action 的文档&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;新建&#34;&gt;新建&lt;/h2&gt;
&lt;p&gt;因为我对于 js 比较不喜欢, 所以使用 ts(虽然也不是很感冒, 但是会好一点)&lt;/p&gt;
&lt;p&gt;进入这个
&lt;a href=&#34;https://github.com/actions/typescript-action&#34; &gt;仓库&lt;/a&gt;
, 然后使用
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://cdn.jsdelivr.net/gh/kikt-blog/blog-2@t1/uPic/1599469136.png&#34; alt=&#34;image-20200907165856148&#34;  crossorigin/&gt;
&lt;/p&gt;
按钮, 完成初始化的过程.&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/kikt-blog/blog-2@t1/uPic/1599469205.png&#34; alt=&#34;image-20200907170005503&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;这里我们创建一个仓库, 这个仓库的目的是自动给 issue 打上 label&lt;/p&gt;
&lt;h3 id=&#34;初始化后的仓库&#34;&gt;初始化后的仓库&lt;/h3&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/kikt-blog/blog-2@t1/uPic/1599469267.png&#34; alt=&#34;image-20200907170107892&#34; style=&#34;zoom:33%;&#34; /&gt;
&lt;p&gt;简单介绍一下这个仓库, 有一些文件和注意事项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;action.yml 是 action 本身的配置文件(别的项目实际就是读取这个东西来确定入口在哪里), 包括参数的配置都是这东西&lt;/li&gt;
&lt;li&gt;一个标准的 npm 项目, 指定了入口&lt;/li&gt;
&lt;li&gt;src 内是主要的 ts 代码&lt;/li&gt;
&lt;li&gt;ts 代码需要被编译为 js 才能使用&lt;/li&gt;
&lt;li&gt;dist 内就是编译产物, git 的版本控制需要包含 dist 下的所有文件, 不然运行的时候会是老代码&lt;/li&gt;
&lt;li&gt;项目本身自带 action, 主要是 CI 这个项目的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;入门&#34;&gt;入门&lt;/h2&gt;
&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;vscode, 我这里是使用 vscode 进行编辑, 你请根据自己的情况&lt;/li&gt;
&lt;li&gt;npm(node), 我是使用 nvm 管理的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你的 node 大于 12.0, 理论上不用动&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>github 一些小技巧</title>
      <link>https://kikt.top/posts/github/work-manager/</link>
      <pubDate>Wed, 12 Dec 2018 15:21:47 +0800</pubDate>
      
      <guid>https://kikt.top/posts/github/work-manager/</guid>
      <description>
        
          
            &lt;p&gt;最近沉迷 flutter,偶尔换换口味,看看 github&lt;/p&gt;
&lt;p&gt;很多知名的开源项目落户于 github,那么为什么呢,人云亦云吗?&lt;/p&gt;
&lt;p&gt;不一定, github 的工作流很强大.能够帮助我们更加清晰工作流程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://help.github.com/categories/managing-your-work-on-github/&#34; &gt;https://help.github.com/categories/managing-your-work-on-github/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先官方链接在此,英文好的直接去看&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外还有一个帮助你学习 github 的小机器人&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://lab.github.com/install&#34; &gt;https://lab.github.com/install&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个小机器人能帮你系统的了解一些 github 的工作流和 github 的一些基本功能&lt;/p&gt;
&lt;p&gt;比如 github 仓库的元数据修改,关键字修改,github pages 的发布&lt;/p&gt;
&lt;p&gt;工作流包括 issues 中的&lt;/p&gt;
&lt;p&gt;PR 整体过程中 分派工作/审核/修改意见/冲突处理/merge 代码的流程,强烈建议 github 用的不好的人先去梳理一下&lt;/p&gt;
&lt;h2 id=&#34;issue-篇&#34;&gt;issue 篇&lt;/h2&gt;
&lt;p&gt;常规的创建之类的就不说了,说一些你日常中看不到的东西,或者说看见了,但是不知道怎么玩出来的&lt;/p&gt;
&lt;p&gt;不会包含所有的东西,但是会有一些很神奇的效果&lt;/p&gt;
&lt;h3 id=&#34;通过代码创建一个-issue&#34;&gt;通过代码创建一个 issue&lt;/h3&gt;
&lt;p&gt;比如我在某行代码发现了一个错误, 那么我可以直接在 github 中选中这个代码,然后开启一个 issue&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;点击行号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;open new issue&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982022054.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982022695.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982023446.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;通过这几个步骤,我们能看到,我们创建了一个指向改行的错误,这样开发者就能很简单的定位到该行,并且可以直观的在 issue 中看到该行代码,方便开发者定位&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/CaiJingLong/github-workflower-example/issues/1&#34; &gt;示例&lt;/a&gt;
&lt;/p&gt;
&lt;h3 id=&#34;创建一个永久可见的代码连接&#34;&gt;创建一个永久可见的代码连接&lt;/h3&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982024027.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982024683.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;提交后就可以看到了&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679982025140.jpg&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/CaiJingLong/github-workflower-example/issues/2&#34; &gt;示例&lt;/a&gt;
&lt;/p&gt;
&lt;h3 id=&#34;todo-list-进度条&#34;&gt;TODO List 进度条&lt;/h3&gt;
&lt;p&gt;有的时候我们会需要使用 issue 来记录我们的开发过程,或者功能需求来提醒我们什么没做&lt;/p&gt;
&lt;p&gt;使用类似如下的写法来创建即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;- [X] 第一项工作
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;- [ ] 第二项工作
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;- [X] 第三项工作
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;- [X] 第四项工作
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功后是这样的&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>github Clone速度慢的解决方案之一</title>
      <link>https://kikt.top/posts/other/github-clone-slow/</link>
      <pubDate>Fri, 20 Jul 2018 11:36:31 +0800</pubDate>
      
      <guid>https://kikt.top/posts/other/github-clone-slow/</guid>
      <description>
        
          
            &lt;p&gt;github 是每个程序员应该都会用到的平台,无奈对于国内貌似没有 CDN,速度极慢..&lt;/p&gt;
&lt;p&gt;我在网上搜了各种修改 host 的方案,无奈并不好用,也许用国外的 VPS 中转可以解决,当然那是要收费的,还需要一些技术门槛&lt;/p&gt;
&lt;p&gt;今天来一个傻瓜式的帮助方案 用 gitee 中转项目&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;
&lt;h3 id=&#34;注册账号&#34;&gt;注册账号&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://gitee.com/&#34; &gt;Gitee&lt;/a&gt;
注册账号,已经有的话可以直接登录,更简单的方案,直接用 github 账号登录

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981910944.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981911792.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;新建项目&#34;&gt;新建项目&lt;/h3&gt;
&lt;p&gt;二选一

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981912722.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981913283.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;新开一个窗口,把你需要的 github 项目地址复制过来,我这里以 flutter/engine 为例

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981913895.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;然后回到新建项目的页面&lt;/p&gt;
&lt;p&gt;点这里

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981914655.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;然后照图上操作

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981915289.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;最后点创建&lt;/p&gt;
&lt;p&gt;接着就等项目好了&lt;/p&gt;
&lt;p&gt;这里需要耐心等待,但无论如何 很大的项目应该比你自己从那下载要快很多,毕竟有时候你从 github 每秒只有几十或者 100 200K

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981915901.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;项目好了后&#34;&gt;项目好了后&lt;/h3&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981916487.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;我们看到,项目都好了&lt;/p&gt;
&lt;p&gt;这里复制项目地址&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981917360.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;然后命令行中

&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981917952.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;我们看到 4M 每秒的速度, 这在大项目中就帮了大忙了&lt;/p&gt;
&lt;p&gt;如果是 200M 的项目,你 200k 一秒 需要下 1000 秒,也就是 20 分钟&lt;/p&gt;
&lt;p&gt;而我这里 clone 只要 50 秒 前面的工作一共操作也就是 2 分钟 等待时间也就是 3~5 分钟&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
