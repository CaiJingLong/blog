<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>log on CaiJingLong</title>
    <link>https://kikt.top/tags/log/</link>
    <description>Recent content in log on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Mar 2019 08:48:51 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/log/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>flutter log4d 日志包的使用</title>
      <link>https://kikt.top/posts/flutter/log/log4d-1/</link>
      <pubDate>Mon, 04 Mar 2019 08:48:51 +0800</pubDate>
      
      <guid>https://kikt.top/posts/flutter/log/log4d-1/</guid>
      <description>
        
          
            最近闲来无事,撸了一个日志插件,功能很简单
在开发机上开启一个服务端
然后客户端(不仅是 flutter,而是只要可以使用dart:io就可以)开启远程连接,然后就可以发送日志到服务端了
好处 这样的好处是,开发机可以实时接收到日志,并且保存到文件中
因为我们很多时候会发生日志超出一个长度(好像是 1000 个),然后在 console 中不能完整显示的问题,比如网络网文请求,如果响应的报文不完整就不能复制出完整的 json,有的错误不太好定位
使用这个插件后,就可以在开发机简单的通过命令保存日志,方便后续定位
只要你的客户端可以访问到服务端,这就能实现
开发过程 使用WebSocket连接,这个类在 dart 中依托于dart:io包,所以如果你是dart web,可能就用不了这个了,flutter和dart vm中是没问题的
这个库支持使用 pub global, 配置 dart 和 pub 到环境变量后可以直接通过log4d在命令行中开启
安装 1. 安装 参考上的 install 标签
pub global activate log4d
这一步完成后可以通过log4d,log4d_client 来使用插件
2.客户端安装 作为一个库来使用, 首先在 pubspec.yaml 中加入依赖
1dependencies:2log4d:^1.0.3# 这一步参考最新版3.获取库 pub get 或 flutter packages get
4. 导入 import &#39;package:log4d/log4d.dart&#39;;
使用  简单的使用方式就是服务端在命令行中开启
1. 开启服务端 log4d -o build/test.log 这样就成功开启了,并且会在接受到日志后将日志保存到指定的目录下
2. 在 flutter 中使用 封装一个简单的帮助类
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
