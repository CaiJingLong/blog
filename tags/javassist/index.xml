<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javassist on CaiJingLong</title>
    <link>https://kikt.top/tags/javassist/</link>
    <description>Recent content in Javassist on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sat, 03 Oct 2020 20:13:47 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/javassist/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用javassist,修改jar包方法实现</title>
      <link>https://kikt.top/posts/java/crack/crack1/</link>
      <pubDate>Sat, 03 Oct 2020 20:13:47 +0800</pubDate>
      
      <guid>https://kikt.top/posts/java/crack/crack1/</guid>
      <description>
        
          
            本篇仅用于记录本人学习javassist的过程, 其中任何步骤或思想被用于非法用途与本人无关
环境介绍  macOS Jdk8, 因为我是安卓开发, 事实上理论上也支持 14(未实测) Intellij Idea 社区版   javassist 简介 javassist 是什么东西 首先, 放上, 简而言之, 这东西是一个库, 可以用来修改 java 的字节码
同时, 这东西不需要你了解太多的 class 在储存为.class 文件时的储存方式, 但需要你对于 java 反射有一定的了解, 因为这东西是以 jar 包的方式引入到 java 应用中, 然后可以通过封装的方式来修改 class 内方法实现
包含但不限于如下功能
 添加,删除字段, 方法, 类. 包 修改方法, 类可见性 修改方法的实现体  应用范围 那么, 这东西有啥用呢?
比如, 有一个库是上古时期的人提供的, 没有源码, 没有文档, 开发者早联系不上了, 但我们可能需要修改其中的一个实现
你可能会想: 反编译啊, 重打包啊
但事实上很难行得通, 因为你重新编译时可能需要找到它当时依赖的所有 jar 包, 然后循环依赖引入, 或者可能你的 jar 包是一个安卓 jar 包, 所以需要安卓环境, 而把 android.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
