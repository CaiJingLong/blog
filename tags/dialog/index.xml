<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dialog on CaiJingLong</title>
    <link>https://kikt.top/tags/dialog/</link>
    <description>Recent content in dialog on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Fri, 29 Mar 2019 10:50:38 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/dialog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter dialog (2) - showGeneralDialog的使用</title>
      <link>https://kikt.top/posts/flutter/dialog/dialog-2/</link>
      <pubDate>Fri, 29 Mar 2019 10:50:38 +0800</pubDate>
      
      <guid>https://kikt.top/posts/flutter/dialog/dialog-2/</guid>
      <description>
        
          
            说了 showDialog 方法的使用
但是这个方法有很多东西是固定的
比如背景颜色,转换的时长和样式等等,很多东西你很难去自定义
本篇我使用另一个方法showGeneralDialog来做一些自定义
准备工作 同上一章一样,定义一个通用方法
1Widget buildButton( 2 String text, 3 Function onPressed, { 4 Color color = Colors.white, 5}) { 6 return FlatButton( 7 color: color, 8 child: Text(text), 9 onPressed: onPressed, 10 ); 11} 简单使用 这里有几个参数,虽然方法签名上只有 2 个@required注解的参数
但事实上,在我当前的版本环境下,如下代码中所有的参数都是必填项,不填会报错 我的运行环境是这样的
1flutter --version 2Flutter 1.3.14 • channel dev • https://github.com/flutter/flutter.git 3Framework • revision 8e7e435706 (6 days ago) • 2019-03-21 15:31:46 -0700 4Engine • revision d4d4883216 5Tools • Dart 2.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Flutter dialog (1) - showDialog的讲解</title>
      <link>https://kikt.top/posts/flutter/dialog/dialog-1/</link>
      <pubDate>Wed, 27 Mar 2019 10:50:38 +0800</pubDate>
      
      <guid>https://kikt.top/posts/flutter/dialog/dialog-1/</guid>
      <description>
        
          
            在应用开发中,或多或少都会遇到需要弹框的问题, 比如:需要用户确认,需要输入一些信息等等的问题,这就要用到 dialog 相关的概念了
而在 flutter 中,所有可以看见的都是 Widget,dialog 也不例外
不过和 android 或 iOS 中不同的一点是,Flutter 中 dialog 不是一个单独的类,而是一个可以由你自定义的 Widget
写在前面 首先为了方便,我定义了一个简单的方法用于构建按钮
1 Widget buildButton( 2 String text, 3 Function onPressed, { 4 Color color = Colors.white, 5 }) { 6 return FlatButton( 7 color: color, 8 child: Text(text), 9 onPressed: onPressed, 10 ); 11 } showDialog dialog 的方法签名是这样的
其中 context 和 builder 是必传项
builder 需要返回一个 Widget,这个 Widget 会被作为 dialog 展示在页面上
比如我简单的写了一个这个方法
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
