<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>路由 on CaiJingLong</title>
    <link>https://kikt.top/tags/%E8%B7%AF%E7%94%B1/</link>
    <description>Recent content in 路由 on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Wed, 05 Sep 2018 12:13:39 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/%E8%B7%AF%E7%94%B1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter 一个简单的Route Helper/Navigator Helper</title>
      <link>https://kikt.top/post/flutter/flutter-simple-route-helper/</link>
      <pubDate>Wed, 05 Sep 2018 12:13:39 +0800</pubDate>
      
      <guid>https://kikt.top/post/flutter/flutter-simple-route-helper/</guid>
      <description>
        
          
            在 flutter 中 route 是一个绕不开,必须面对,且很常用东西
Route 就是路由,顾名思义,负责你页面间的跳转
不想看代码和思路分析的直接 copy 了拿去用就行 没有啥外部依赖,只需要注意_rootRoute 后面的字符串需要和 initialRoute 对应即可
路由又分静态和动态路由
静态就是不需要传参数的,这样的路由可以直接定义在 MaterialApp/WidgetsApp 里 这样可以通过Navigator.pushNamed调用
 动态的就是传入一个PageRoute, 通常是一个MaterialPageRoute 或者CupertinoPageRoute,或者你如果有自定义的有可以使用
这里我使用一个我的工具类来实现跳转,因为大部分情况下,工程中的路由都是动态的,也就是需要传参数的,所以工具类中只包含了静态路由
1import &amp;#39;dart:async&amp;#39;; 23import &amp;#39;package:flutter/material.dart&amp;#39;; 45class RouteHelper { 6static Future&amp;lt;T&amp;gt; pushWidget&amp;lt;T&amp;gt;( 7BuildContext context, 8Widget widget, { 9bool replaceRoot = false, 10bool replaceCurrent = false, 11}) { 12return pushRoute( 13context, 14MaterialPageRoute(builder: (ctx) =&amp;gt; widget), 15replaceRoot: replaceRoot, 16replaceCurrent: replaceCurrent, 17); 18} 1920static Future&amp;lt;T&amp;gt; pushRoute&amp;lt;T&amp;gt;( 21BuildContext context, 22PageRoute&amp;lt;T&amp;gt; route, { 23bool replaceRoot = false, 24bool replaceCurrent = false, 25}) { 26assert(!
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
