<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ble on CaiJingLong</title>
    <link>https://kikt.top/tags/ble/</link>
    <description>Recent content in Ble on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Wed, 13 Sep 2017 11:52:48 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/ble/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swift连接BLE蓝牙打印机</title>
      <link>https://kikt.top/posts/ios/swift/swift-connect-ble-printer/</link>
      <pubDate>Wed, 13 Sep 2017 11:52:48 +0800</pubDate>
      
      <guid>https://kikt.top/posts/ios/swift/swift-connect-ble-printer/</guid>
      <description>
        
          
            &lt;h1 id=&#34;swift-蓝牙连接&#34;&gt;swift 蓝牙连接&lt;/h1&gt;
&lt;h2 id=&#34;项目简介&#34;&gt;项目简介&lt;/h2&gt;
&lt;p&gt;最近公司要用到便携式蓝牙打印机进行打印&lt;br&gt;
打印机使用的 ECS/POS 指令集&lt;br&gt;
ios 使用的 BLE 方案,安卓则是因为设备的原因只能选择普通蓝牙的连接方案&lt;br&gt;
BLE 蓝牙相关的概念性东西我这里就不说了 大家可以自己去搜索下&lt;br&gt;
有个 mac 的蓝牙开发工具 LightBlue,很好用,mac app store 自己下就好了,这个很方便你理解 BLE 的蓝牙相关
device(central/peripheral)-&amp;gt;services-&amp;gt;characteristics&lt;/p&gt;
&lt;p&gt;




&lt;p class=&#34;md__image&#34;&gt;
  
    &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981919819.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;屏幕快照 2017-09-08 下午3.39.04.png&#34;  crossorigin/&gt;
  
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;这里可以看到,有一个 mobike,有兴趣的同学可以研究下 mobike 的蓝牙连接 ☺
说笑一下,人家肯定有安全性校验的&lt;/p&gt;
&lt;h2 id=&#34;语言选型&#34;&gt;语言选型&lt;/h2&gt;
&lt;p&gt;最近在学习 ios 开发,因为我是 android 出身,学习 ios 开发的时候 swift3 已经出现很久了,所以我这里使用的 swift 进行开发&lt;/p&gt;
&lt;h2 id=&#34;坑-1&#34;&gt;坑 1&lt;/h2&gt;
&lt;p&gt;最初我使用了厂家提供的 ios sdk 进行开发,其中封装了很多常用的方法,让我自己以为很简单就能完成,但是事实上是我太天真了,首先厂家提供的是.a 的库,只有一个.h 文件暴露在外,我的项目是纯 swift 项目,这就不可避免的使用到了 swift 到 oc 的桥接&lt;/p&gt;
&lt;h2 id=&#34;坑-2&#34;&gt;坑 2&lt;/h2&gt;
&lt;p&gt;满以为桥接完了调 SDK 方法就行,谁知道调用的时候根本就没反应,没办法,只能摸石头过河进行开发了,最初使用的是 oc 的 corebluetooth 方案,因为实在是没找到 swift 的相关说法,baidu 没搜到,没办法,oc 毕竟也算是入门了,直接开干了&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
