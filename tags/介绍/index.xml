<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>介绍 on CaiJingLong</title>
    <link>https://kikt.top/tags/%E4%BB%8B%E7%BB%8D/</link>
    <description>Recent content in 介绍 on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Fri, 06 Jul 2018 09:13:17 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/%E4%BB%8B%E7%BB%8D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter开篇介绍</title>
      <link>https://kikt.top/posts/flutter/flutter-first-blog/</link>
      <pubDate>Fri, 06 Jul 2018 09:13:17 +0800</pubDate>
      
      <guid>https://kikt.top/posts/flutter/flutter-first-blog/</guid>
      <description>
        
          
            &lt;h1 id=&#34;flutter-介绍&#34;&gt;flutter 介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;所有的一切都是个人观点,不满可以留言,可以讨论,吵架大可不必
所有的资料仅 2018-07-06 时我所了解的,当前的 flutter 版本号 dev 为 0.5.6,beta 为 0.5.1
转载请注明出处,简书为第一发布平台(本人目前迁出简书平台,自建 blog)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;何谓-flutter&#34;&gt;何谓 flutter&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;




&lt;p class=&#34;md__image&#34;&gt;
  
    &lt;img src=&#34;https://dev.azure.com/cjlspy/images/_apis/git/repositories/MirrorImages/items?path=%2F1679981930112.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;versionDescriptor%5Bversion%5D=main&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=7.0&#34; alt=&#34;image.png&#34;  crossorigin/&gt;
  
&lt;/p&gt;

google 自己的官方介绍,来源于
&lt;a href=&#34;https://flutter.io&#34; &gt;flutter 官网&lt;/a&gt;
&lt;/p&gt;
&lt;h3 id=&#34;为什么要用-flutter&#34;&gt;为什么要用 flutter&lt;/h3&gt;
&lt;p&gt;跨平台框架,能开发 ios/android,性能不错&lt;/p&gt;
&lt;h3 id=&#34;已有那么多的跨平台方案flutter-有什么优势&#34;&gt;已有那么多的跨平台方案,flutter 有什么优势&lt;/h3&gt;
&lt;p&gt;所有 UI 为 Flutter 平台自建,使用 skia 引擎绘制到屏幕上,能保持高度的统一性
所以 flutter 定位仅为 UI 框架,可以做一些业务逻辑&lt;/p&gt;
&lt;h3 id=&#34;劣势呢&#34;&gt;劣势呢&lt;/h3&gt;
&lt;p&gt;目前与原生控件很难有机的结合到一个界面内&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  大概意思是,目前类似于baidumap,这样的控件只能是生硬的覆盖到flutter的界面上
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  android中对应FlutterView(SurfaceView),ios中是FlutterViewController的根view
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  你很难直接写方便的回调,手势控制
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  WebView,直播等视频播放同理
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;与原生通信仅依赖一个接近字符串性质的通道,没有构建工具/编译层级的检查
尚处于初级阶段,开源社区还不活跃,相关社区关注度不高&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  关于字符串性质的通道:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  大概意思就是,所有的通信依赖于字符串
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  比如flutter中需要定义
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  static const MethodChannel _channel = const MethodChannel(&amp;#39;com.365.app/BarCode&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  _channel.invokeMethod(&amp;#34;getData&amp;#34;, source);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  类似于这样的调用方式
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  而原生中 也是需要定义出完全相同的字符串来表示通道名,方法名等等
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;flutter-使用-dart-语言开发&#34;&gt;flutter 使用 dart 语言开发&lt;/h3&gt;
&lt;p&gt;为什么使用 dart,貌似是说 flutter 的开发团队物理距离 dart 的团队很近,这段真实性未知&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
