<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>源码解析 on CaiJingLong</title>
    <link>https://kikt.top/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 源码解析 on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Tue, 08 Jan 2019 16:07:06 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Finish FlutterActivity 源码解析</title>
      <link>https://kikt.top/posts/flutter/android/finish-activity/</link>
      <pubDate>Tue, 08 Jan 2019 16:07:06 +0800</pubDate>
      
      <guid>https://kikt.top/posts/flutter/android/finish-activity/</guid>
      <description>
        
          
            &lt;p&gt;开篇声明:本篇文章不算是新手向的东西,你需要对于 flutter 和 android 本身有一定的了解&lt;/p&gt;
&lt;h2 id=&#34;文章原因&#34;&gt;文章原因&lt;/h2&gt;
&lt;p&gt;为啥要写这个文章呢&lt;/p&gt;
&lt;p&gt;最近有 qq 群的同学询问如何在关闭界面后在 service 中执行 dart 代码&lt;/p&gt;
&lt;p&gt;我当时的理解就是 flutter 是依附于 activity 存在的,但是这部分并没有任何实际支撑&lt;/p&gt;
&lt;p&gt;所以我抱着好奇的想法去跟了一下 engine 部分的源码&lt;/p&gt;
&lt;h2 id=&#34;flutter-engine-简单介绍&#34;&gt;flutter engine 简单介绍&lt;/h2&gt;
&lt;p&gt;这里简单介绍一下 flutter engine,&lt;/p&gt;
&lt;p&gt;在 android 系统上 flutter 是使用 FlutterView 实现的,
&lt;a href=&#34;https://github.com/flutter/engine/tree/master/shell/platform/android/io/flutter&#34; &gt;对应 github 源码 android 部分&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;对应的 java 层级的源码都在这里&lt;/p&gt;
&lt;p&gt;一般一个纯 flutter 项目中是这样的, 有一个 FlutterApplication 一个 FlutterActivity 一个 FlutterView,而我们 flutter 所有的界面都是在 FlutterView 上画的&lt;/p&gt;
&lt;h2 id=&#34;解析开始&#34;&gt;解析开始&lt;/h2&gt;
&lt;p&gt;以下基于你对于 android 原生开发有所涉猎,而不是完全不了的基础上展开&lt;/p&gt;
&lt;p&gt;我们都知道,当 finish Activity 后页面会回调&lt;code&gt;onDestroy&lt;/code&gt;方法&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/844861b8-ee45-48a3-b430-b974684baaaa/_apis/git/repositories/bf4da1c1-1cfa-4f54-8a75-745cce2b737c/items?versionDescriptor%5Bversion%5D=master&amp;amp;path=%2F20190108163000.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=5.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;这个方法中会回调一个&lt;code&gt;eventDelegate.onDestroy&lt;/code&gt;,我们查看以下这个东西具体是调用到哪里&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/844861b8-ee45-48a3-b430-b974684baaaa/_apis/git/repositories/bf4da1c1-1cfa-4f54-8a75-745cce2b737c/items?versionDescriptor%5Bversion%5D=master&amp;amp;path=%2F20190108163601.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=5.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://dev.azure.com/cjlspy/844861b8-ee45-48a3-b430-b974684baaaa/_apis/git/repositories/bf4da1c1-1cfa-4f54-8a75-745cce2b737c/items?versionDescriptor%5Bversion%5D=master&amp;amp;path=%2F20190108163642.png&amp;amp;versionDescriptor%5BversionOptions%5D=0&amp;amp;versionDescriptor%5BversionType%5D=0&amp;amp;resolveLfs=true&amp;amp;%24format=octetStream&amp;amp;api-version=5.0&#34; alt=&#34;图片&#34;  crossorigin/&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;能看到具体的调用是这样的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果 Application 是 FlutterApplication 会直接将当前 Activity 置空&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
