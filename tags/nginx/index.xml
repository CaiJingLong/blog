<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on CaiJingLong</title>
    <link>https://kikt.top/tags/nginx/</link>
    <description>Recent content in nginx on CaiJingLong</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Thu, 15 Nov 2018 15:28:11 +0800</lastBuildDate><atom:link href="https://kikt.top/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker-Compose 结合nginx实现跨容器转发</title>
      <link>https://kikt.top/post/docker/docker-compose-and-nginx-forward/</link>
      <pubDate>Thu, 15 Nov 2018 15:28:11 +0800</pubDate>
      
      <guid>https://kikt.top/post/docker/docker-compose-and-nginx-forward/</guid>
      <description>
        
          
            开发环境 mac zsh docker-compose
1~ docker-compose --version 2docker-compose version 1.22.0, build f46880f 目录结构  docker-compose.yml 1version:&amp;#34;3&amp;#34;2services:3web:# 服务的名称4image:nginx5volumes:# 文件夹映射6- /Users/cai/Documents/www:/usr/share/nginx/html:ro# 宿主:docker:只读 ,www目录7- ./config/web.conf:/etc/nginx/nginx.conf:ro# nginx配置文件8ports:# 端口转发 宿主:docker9- &amp;#34;8080:80&amp;#34;10- &amp;#34;8081:81&amp;#34;11# environment:12# - NGINX_HOST=foobar.com13# - NGINX_PORT=8014# command: /bin/bash -c &amp;#34;envsubst &amp;lt; /etc/nginx/conf.d/mysite.template &amp;gt; /etc/nginx/conf.d/default.conf &amp;amp;&amp;amp; exec nginx -g &amp;#39;daemon off;&amp;#39;&amp;#34;15networks:## 定义网络16nn:## 加入的网络的名称17ipv4_address:192.168.5.101## ipv4的ip地址1819web8082:20image:nginx21volumes:22- /Users/cai/Documents/www/8082:/usr/share/nginx/html:ro23ports:24- &amp;#34;8082:80&amp;#34;2526networks:27nn:28ipv4_address:192.168.5.1022930web8083:31image:nginx32volumes:33- /Users/cai/Documents/www/8083:/usr/share/nginx/html:ro34ports:35- &amp;#34;8083:80&amp;#34;3637networks:38nn:39ipv4_address:192.168.5.1034041networks:##定义网络组42nn:## 网络组名称43driver:bridge## 网络的模式44ipam:## 配置网络45driver:default46config:47- subnet:192.168.5.0/24## ip地址网络 这里宿主机一般会是该网段的 192.168.5.1,所以不要设置自网段为1配置服务 配置网络
将服务加入同一个网络组,这样 docker 就可以在同一个网络组里了,由于 docker 的特性,每个容器会认为自己和另一个容器是局域网的关系
我这里做的是 nginx 转发
nginx.conf 1user nginx; 2worker_processes 1; 34error_log /var/log/nginx/error.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
